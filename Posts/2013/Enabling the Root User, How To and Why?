As you may already know, OS X is built upon the UNIX foundation.  UNIX is a much older operating system that eventually inspired the much more widely known system, Linux.  There are certain types of users on your computer: Administrators, and Standard users.  Most of you are the administrator for the computer.  But what if I told you, that there are things that you cannot do on your computer, and files you cannot access, even though you're an administrator?  Well, it's true.  Because there is one more user that's installed on every UNIX system called 'root'.  The root user is the highest level user you can use.  It has no restrictions to what it can do, or what files it has access to.  Think of root user as the 'god' of your computer.  By default, OS X hides the root user and disables you from accessing it to prevent you from damaging your system.  But there are times when you may need to get at an area of your computer that normal users can't.  <strong>Using the root user requires knowledge of the Bash shell.</strong>

[tip]<strong>Warning: The root user has no restrictions to what it can do, and improper use of the root user can completely ruin your computer.  If you don't have a specific reason to use the root user, don't enable it.</strong>[/tip]

<h2>Enabling the Root User</h2>

To enable the root user, log in to your Mac using an Administrator account.  Then:

<ol>
<li>Open System Preferences and select User &amp; Groups</li>
<li>Click the lock in the lower left to unlock the settings pane</li>
<li>Click Login Options, and under Network Account Server, select Join</li>
<li>Click Open Directory Utility</li>
<li>Click the lock in the lower left to unlock the settings pane</li>
<li>Select Edit, then Enable Root User</li>
<figure class="post-image"><img src="http://ianspence.com/blog/wp-content/uploads/2013/10/root_enableroot.jpg" alt="Enable the Root User" />
Enable the Root User
</figure>
<li>Enter a password for the root user.  Note down the password you chose for the user, it's very difficult to reset a forgotten root password</li>
<figure class="post-image"><img src="http://ianspence.com/blog/wp-content/uploads/2013/10/root_setpassword.jpg" alt="Make sure the password is strong for the root user" />
Make sure the password is strong for the root user
</figure>
<li>Click OK and the root user has not been unlocked.</li>
</ol>

<h2>Accessing the Root user</h2>

There are three ways you can access the root user: using the GUI, the 'su' command, or the UNIX terminal.

<h3>Using the GUI</h3>

Now that you've enabled the root user, you'll notice that on the login screen there's a new 'Other Users' button that asks you for a username and password, well you can probably guess what we type there.  Enter the username <code>root</code> and whatever password you selected and click the login button.  You will then be asked to set up iCloud, I strongly recommend you do not set up iCloud to discourage normal use of the root user.  Once logged in, you can use terminal as the root user, and access files without issue in Finder.

<figure class="post-image"><img src="http://ianspence.com/blog/wp-content/uploads/2013/10/root_login.jpg" alt="Using the GUI to log in as the Root User" />
Using the GUI to log in as the Root User
</figure>

<h3>Using the 'su' command</h3>

For those of you who are familiar with bash (which if you're planning to use the root user you should be), you can now use the <code>su</code> command to switch your current terminal session's identity to root.  Simply enter <code>su - root</code> and enter the password you chose when asked.  You can now use terminal as the root user.

<figure class="post-image"><img src="http://ianspence.com/blog/wp-content/uploads/2013/10/root_terminal.jpg" alt="Using the Terminal to log in as the Root User" />
Using the Terminal to log in as the Root User
</figure>

<h3>Using the UNIX terminal</h3>

The last method to access the root user is certainly the most advance.  Now that the root user has been enabled, another startup mode has also been enabled for your use, the Shell startup mode.  The shell startup mode gives you access to the UNIX shell and nothing else.  This shell gives you raw access to all areas of your computer that couldn't be accessed when your computer is running as OS X is using the files.  To start up in Shell mode, turn off your computer.  Hold <code>&#8984; + S</code> and press the power button.  You will see the Apple logo, followed by the rEFIt bootloader (normally hidden from boot).  If you have FileVault enabled, enter your password.  You will then see the UNIX kernel run through the startup process.  When complete your shell should show <code>:/ root#</code>.  From here, you can begin to use the root user in the UNIX shell.

<figure class="post-image"><img src="http://ianspence.com/blog/wp-content/uploads/2013/10/root_shell.jpg" alt="Using the Unix Shell to log in as the Root User" />
Using the Unix Shell to log in as the Root User
</figure>

<h2>Why using Root is dangerous</h2>

As mentioned before, OS X by default locks certain areas of your system to prevent you from accidentally making changes that can harm your system.  These restrictions don't apply to root.  In fact, almost no restrictions apply to root.

Each and every file and folder in OS X has permissions relating to it.  Permissions describe who can open, edit, or work with the files and folders of your system.  These permissions are ignored for the root user.  Say, for whatever reason, you have a file that nobody has access to, (<code>chmod 000</code> for those who know UNIX permissions).  Not even you, the creator of that file, can access it.  Root can.  Meaning that if exploited, the root user has access to all of your saved information on your user, and the important files of your system.

<figure class="post-image"><img src="http://ianspence.com/blog/wp-content/uploads/2013/10/root_permission.jpg" alt="Permissions describe who can open, edit, or work with the files and folders of your system." />
Permissions describe who can open, edit, or work with the files and folders of your system.
</figure>

However, having permissions be completely ignored for the root user can be both a blessing and a curse.  Even though it's heavily debated on the internet, the fact remains that permissions sometimes gets mucked up in OS X and you can lose access to files you once had.  This is where the root user can come in handy, as it can change permissions for any file regardless of what they are currently set at.

<h2>I forgot the password, what now?</h2>

Well now you've done it.  You've forgotten the password for the god user of your computer.  What should you do?  Throw out your computer? Probably, seeing as you shouldn't own one if you can't remember one of the most important passwords for your computer.  But in all seriousness, <strong>don't forget the root password</strong>.  Now, I may have fibbed a little when I said its very difficult to reset the root password, but I only did it to scare you into remembering it.  It's actually really freaking easy, in fact, it's so easy it's insecure, but I'll go over how to fix that.

<h3>How to reset the root password</h3>

Resetting the root password is very similar to enabling the user itself:

<ol>
<li>Open System Preferences and select User &amp; Groups</li>
<li>Click the lock in the lower left to unlock the settings pane</li>
<li>Click Login Options, and under Network Account Server, select Join</li>
<li>Click Open Directory Utility</li>
<li>Click the lock in the lower left to unlock the settings pane</li>
<li>Select Edit, then Change Root Password</li>
<figure class="post-image"><img src="http://ianspence.com/blog/wp-content/uploads/2013/10/root_enableroot.jpg" alt="Disabled in this picture, the change root password option is used to reset a forgotten root password" />
Disabled in this picture, the change root password option is used to reset a forgotten root password
</figure>
<li>Enter a new password for the user and verify it.</li>
<li>Click OK and the password has been reset..</li>
</ol>

<h3>Preventing Administrators from Changing Roots Password</h3>

One thing that's very odd about OS X is that any Administrator can change the root password without even having to know it.  This can be resolved by removing permissions to the Directory Utility App for all other users (except root, of course).

<ol>
<li>To remove permissions, open Terminal and enter the following command: <code>su - root</code>.  Enter your root password when asked</li>
<li>Type out the following command: <code>chmod 700 "/System/Library/CoreServices/Directory Utility.app"</code></li>
<li>Restart the computer <strong>(This is required)</strong></li>
</ol>

What that does, is prevent users that are not root from opening the Directory Utility app.  To put it simple, 7 means root has full access, the first 0 means that the group that owns this file has no access, the second 0 means that all other users have no access.

<h2>With great power, comes great responsibility.</h2>

Using the root user can be the only solution to some pesky problems, however it's a very dangerous tool that can ruin your computer.  For example, the root user can format the recovery partition on your computer, preventing you from reinstalling OS X, or the root user could run a command that will delete literally every single file on your system.  I strongly recommend that you only use root for the task you need it for, then disable the account.  The account can be disabled by following the same steps to enable it, but clicking 'disable root user' instead.
