NGINX is an powerful and free open source HTTP server.  Started in 2002, NGINX now powers some of the most popular web services out there and continues to grow.  In today's tutorial I will show you how to build NGINX from source on a RedHat/CentOS Linux machine.

<!--more-->
<hr>

There's two ways to get NGINX on Linux: the <a href="#easy">easy way using Yum</a> and the <a href="#hard">hard way using make</a>.  The easy way involves adding the official nginx repository and installing it using Yum.  This is easy, quick, and allows to easy updates.  However, this will not give you the latest version and does not allow you to configure the installation.  The hard way involves downloading the source code, manually installing dependencies, configuring, and installing.  This takes time and isn't very easy.  However, this gives you the latest version and complete control over the installation.
<a name="easy"></a><h2>The Easy Way</h2>

Start off by switching to root
[sourcecode language="bash"]su -
Password: < your root password >[/sourcecode]

And now make the new repository file
[sourcecode language="bash"]vi /etc/yum.repos.d/nginx.repo[/sourcecode]

Press the <code>A</code> key to enter insert mode, and paste or type the following:

[sourcecode language="bash"]
[nginx]
name=nginx repo
baseurl=http://nginx.org/packages/centos/$releasever/$basearch/
gpgcheck=0
enabled=1
[/sourcecode]

[tip]<strong>Note:</strong> If you use RedHat, replace <code>centos</code> with <code>rhel</code>[/tip]

Press <code>Esc</code> to exit insert mode, then type <code>:x</code> and press <code>Enter</code> to save your changes.

Now, you can install NGINX using Yum
[sourcecode language="bash"]yum install nginx[/sourcecode]

It will install NGINX, and it's dependencies, you will be asked to confirm the download, press <code>y</code> to confirm and continue.  Once the download and install is complete, you can start NGINX using:
[sourcecode language="bash"]service nginx start[/sourcecode]

You should see this.  If you don't, read the error message and refer to Google for answers.
[sourcecode language="bash"]Starting nginx:                                            [  OK  ][/sourcecode]

You can now browse to your servers IP address / domain name and see the Welcome to NGINX setup page:

[img src="http://blog.ianspence.com/wp-content/uploads/2014/03/welcome.png"]Welcome to NGINX[/img]

To make NGINX start with the system at boot, use:
[sourcecode language="bash"]chkconfig nginx on[/sourcecode]

<a name="hard"></a><h2>The Hard Way</h2>

Start off by switching to root

[sourcecode language="bash"]su -
Password: < your root password >[/sourcecode]

Make a folder in your home directory called sources
[sourcecode language="bash"]mkdir sources && cd sources[/sourcecode]

Download the latest source of NGINX from the <a href="http://wiki.nginx.org/Install#Source_Releases">NGINX webpage</a> and Extract the source tarball:
[sourcecode language="bash"]curl http://nginx.org/download/nginx-1.5.12.tar.gz | tar -xzf -[/sourcecode]

Move into the extracted folder and double check that you have a C / C++ compiler and some of the reqired packages for NGINX.  If you already have any of these, this command is harmless:
[sourcecode language="bash"]yum install gcc gcc-c++ pcre pcre-devel openssl openssl-devel zlib zlib-devel[/sourcecode]

Now for the fun part: configuration options!  NGINX has a lot of configuration options to customize how it will run and what is installed.  The best part is that if you decide that you need something later; you can run the script again with ease.  We're going to go over a few of the common install options, but I recommend you check out the <a href="http://wiki.nginx.org/InstallOptions">Wiki page for InstallOptions</a>

<h3>NGINX Install Options</h3>

<ul>
<li><code>--user=name</code> sets the user that the NGINX process will run as</li>
<li><code>--group=name</code> sets the group that the NGINX process will run as</li>
<li><code>--sbin-path=/usr/sbin/nginx</code> sets the name for the nginx binary.</li>
<li><code>--conf-path=/etc/nginx/nginx.conf</code> sets the name for the nginx.conf configuration file.</li>
<li><code>--pid-path=/var/run/nginx.pid</code> sets the name for the process ID file used by the main process.</li>
<li><code>--with-http_ssl_module</code>  enables the use of HTTPS.  This requires OpenSSL.</li>
</ul>

So once you've chosen the options you want, type <code>./configure</code> followed by your options separated by a single space.  This is the command I used, but you can use what works for you:
[sourcecode language="bash"]./configure --user=ian --group=ian --sbin-path=/usr/sbin/nginx --conf-path=/etc/nginx/nginx.conf --pid-path=/var/run/nginx.pid[/sourcecode]

Chances are, that configure script will fail because of a missing dependency, install the required packages, then run your configure script until you see the <em>Configuration Summary</em> at the bottom (this means it worked!)</em>.

Now you install it:
[sourcecode language="bash"]make && make install[/sourcecode]

You're almost done!  Download the <a href="http://wiki.nginx.org/RedHatNginxInitScript">NGINX RedHat init.d script</a> so that we can use the service command.
[sourcecode language="bash"]vi /etc/init.d/nginx[/sourcecode]

Paste the init script from the link above here and save it.  Then change the permissions so it can be executed
[sourcecode language="bash"]chmod a+x /etc/init.d/nginx[/sourcecode]

Start NGINX using:
[sourcecode language="bash"]service nginx start[/sourcecode]

You should see this.  If you don't, read the error message and refer to Google for answers.
[sourcecode language="bash"]Starting nginx:                                            [  OK  ][/sourcecode]

You can now browse to your servers IP address / domain name and see the Welcome to NGINX setup page:

[img src="http://blog.ianspence.com/wp-content/uploads/2014/03/welcome.png"]Welcome to NGINX[/img]

To make NGINX start with the system at boot, use:
[sourcecode language="bash"]chkconfig nginx on[/sourcecode]
